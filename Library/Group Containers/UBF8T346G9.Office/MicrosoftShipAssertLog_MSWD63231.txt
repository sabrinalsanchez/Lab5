Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:41:47 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x010a8c42 in _wdGetApplicationObject + 0x0060B7A2 (Microsoft Word + 0x00feac42)
# 36  0x00372ae9 in __mh_execute_header + 0x002B4AE9 (Microsoft Word + 0x002b4ae9)
# 37  0x0035a001 in __mh_execute_header + 0x0029C001 (Microsoft Word + 0x0029c001)
# 38  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 39  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 57  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 58  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 59  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 60  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 61  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 62  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 63  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 64  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 65  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 66  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 67  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 68  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 69  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 70  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 71  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 72  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 73  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 6
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:42:01 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x010a8c42 in _wdGetApplicationObject + 0x0060B7A2 (Microsoft Word + 0x00feac42)
# 36  0x00372ae9 in __mh_execute_header + 0x002B4AE9 (Microsoft Word + 0x002b4ae9)
# 37  0x0035a001 in __mh_execute_header + 0x0029C001 (Microsoft Word + 0x0029c001)
# 38  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 39  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 57  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 58  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 59  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 60  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 61  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 62  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 63  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 64  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 65  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 66  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 67  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 68  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 69  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 70  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 71  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 72  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 73  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 7
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:45:40 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 39  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 40  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 41  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 42  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 43  0x02d0f3d3 in _MsoDisposeAppWelcomeWindow + 0x00001F84 (MicrosoftOffice + 0x005c43d3)
# 44  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 45  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 46  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 47  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 48  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 49  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 50  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 51  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 8
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:45:44 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x010a8c42 in _wdGetApplicationObject + 0x0060B7A2 (Microsoft Word + 0x00feac42)
# 36  0x00372ae9 in __mh_execute_header + 0x002B4AE9 (Microsoft Word + 0x002b4ae9)
# 37  0x0035a001 in __mh_execute_header + 0x0029C001 (Microsoft Word + 0x0029c001)
# 38  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 39  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 57  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 58  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 59  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 60  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 61  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 62  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 63  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 64  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 65  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 66  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 67  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 68  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 69  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 70  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 71  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 72  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 73  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 9
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:46:29 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x010a8c42 in _wdGetApplicationObject + 0x0060B7A2 (Microsoft Word + 0x00feac42)
# 36  0x00372ae9 in __mh_execute_header + 0x002B4AE9 (Microsoft Word + 0x002b4ae9)
# 37  0x0035a001 in __mh_execute_header + 0x0029C001 (Microsoft Word + 0x0029c001)
# 38  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 39  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 57  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 58  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 59  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 60  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 61  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 62  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 63  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 64  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 65  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 66  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 67  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 68  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 69  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 70  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 71  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 72  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 73  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 10
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:46:34 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x010a8c42 in _wdGetApplicationObject + 0x0060B7A2 (Microsoft Word + 0x00feac42)
# 36  0x00372ae9 in __mh_execute_header + 0x002B4AE9 (Microsoft Word + 0x002b4ae9)
# 37  0x0035a001 in __mh_execute_header + 0x0029C001 (Microsoft Word + 0x0029c001)
# 38  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 39  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 57  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 58  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 59  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 60  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 61  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 62  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 63  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 64  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 65  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 66  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 67  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 68  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 69  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 70  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 71  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 72  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 73  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 11
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:46:49 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 39  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 40  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 41  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 42  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 43  0x02814480 in OartTelemetryStream::FReport() + 0x00000CD0 (MicrosoftOffice + 0x000c9480)
# 44  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 45  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 46  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 47  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 48  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 49  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 50  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 51  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 12
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:52:05 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03631b8a in Art::View::FOnMouseMessageCore(Art::MouseMessage const&) + 0x000001B2 (OfficeArt + 0x00120b8a)
# 39  0x00f07654 in _wdGetApplicationObject + 0x0046A1B4 (Microsoft Word + 0x00e49654)
# 40  0x00f082fb in _wdGetApplicationObject + 0x0046AE5B (Microsoft Word + 0x00e4a2fb)
# 41  0x00f0afba in _wdGetApplicationObject + 0x0046DB1A (Microsoft Word + 0x00e4cfba)
# 42  0x0035c7b4 in __mh_execute_header + 0x0029E7B4 (Microsoft Word + 0x0029e7b4)
# 43  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 44  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 45  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 46  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 47  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 48  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 49  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 50  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 51  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 52  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 53  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 54  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 55  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 56  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 57  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 58  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 59  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 60  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 61  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 62  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 63  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 64  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 65  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 66  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 67  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 68  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 69  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 70  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 71  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 72  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 73  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 74  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 75  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 76  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 77  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 78  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 13
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:52:09 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x010a8c42 in _wdGetApplicationObject + 0x0060B7A2 (Microsoft Word + 0x00feac42)
# 36  0x00372ae9 in __mh_execute_header + 0x002B4AE9 (Microsoft Word + 0x002b4ae9)
# 37  0x0035a001 in __mh_execute_header + 0x0029C001 (Microsoft Word + 0x0029c001)
# 38  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 39  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 57  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 58  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 59  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 60  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 61  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 62  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 63  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 64  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 65  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 66  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 67  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 68  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 69  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 70  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 71  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 72  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 73  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 14
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:52:42 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03631b8a in Art::View::FOnMouseMessageCore(Art::MouseMessage const&) + 0x000001B2 (OfficeArt + 0x00120b8a)
# 39  0x00f07654 in _wdGetApplicationObject + 0x0046A1B4 (Microsoft Word + 0x00e49654)
# 40  0x00f082fb in _wdGetApplicationObject + 0x0046AE5B (Microsoft Word + 0x00e4a2fb)
# 41  0x00f0afba in _wdGetApplicationObject + 0x0046DB1A (Microsoft Word + 0x00e4cfba)
# 42  0x0035c7b4 in __mh_execute_header + 0x0029E7B4 (Microsoft Word + 0x0029e7b4)
# 43  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 44  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 45  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 46  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 47  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 48  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 49  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 50  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 51  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 52  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 53  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 54  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 55  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 56  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 57  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 58  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 59  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 60  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 61  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 62  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 63  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 64  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 65  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 66  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 67  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 68  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 69  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 70  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 71  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 72  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 73  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 74  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 75  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 76  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 77  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 78  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 15
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:52:50 2017
#  1  0x02d17050 in _MsoGetScreenRect + 0x00000E68 (MicrosoftOffice + 0x005cc050)
#  2  0x02d17a79 in _MsoGetScreenRect + 0x00001891 (MicrosoftOffice + 0x005cca79)
#  3  0x029cf609 in _MsoFInsertPictureDlg + 0x000002D3 (MicrosoftOffice + 0x00284609)
#  4  0x0181e17b in _wdGetApplicationObject + 0x00D80CDB (Microsoft Word + 0x0176017b)
#  5  0x00ec98c5 in _wdGetApplicationObject + 0x0042C425 (Microsoft Word + 0x00e0b8c5)
#  6  0x00ec93b1 in _wdGetApplicationObject + 0x0042BF11 (Microsoft Word + 0x00e0b3b1)
#  7  0x03668cf0 in Art::CallCommand(Art::Command const&, Art::Selection&, Ofc::TWeakPtr<Art::View> const&, Ofc::TOwningPtr<Art::DuoChainMergePolicy>&, Ofc::TWeakPtr<Art::IE2o> const&) + 0x00000345 (OfficeArt + 0x00157cf0)
#  8  0x036687b5 in Art::Editor::PerformCommand(Art::Command const&, bool, Ofc::TOwningPtr<Art::DuoChainMergePolicy>&) + 0x000001BF (OfficeArt + 0x001577b5)
#  9  0x0397ad79 in Art::View::BuildObjectSnapPoints(Art::SnapInfo&) const + 0x000004A9 (OfficeArt + 0x00469d79)
# 10  0x0397aff3 in Art::View::PerformInfoCommand(Art::InfoCommand const&, bool, bool) + 0x00000047 (OfficeArt + 0x00469ff3)
# 11  0x03bbe1ca in Art::UserInterface::FPerformInfoCommand(Art::InfoCommand const&, bool, bool) + 0x0000005C (OfficeArt + 0x006ad1ca)
# 12  0x03d7620c in Art::ExecuteCommandControlUser::OnSetValue() + 0x000000E2 (OfficeArt + 0x0086520c)
# 13  0x03d7608b in Art::ExecuteActionControlUserBase::SetValue(void*, int, FlexUI::FlexValue*) + 0x0000001D (OfficeArt + 0x0086508b)
# 14  0x02784949 in OfficeSpace::DataSource::SetValue(void*, int, FlexUI::FlexValue*) + 0x000000FF (MicrosoftOffice + 0x00039949)
# 15  0x0352c186 in non-virtual thunk to Art::AppDataSourceProxy::SetValue(void*, int, FlexUI::FlexValue*) + 0x0000002A (OfficeArt + 0x0001b186)
# 16  0x02784949 in OfficeSpace::DataSource::SetValue(void*, int, FlexUI::FlexValue*) + 0x000000FF (MicrosoftOffice + 0x00039949)
# 17  0x027836f0 in FlexUI::DataSource::QueryInterface(_GUID const&, void**) + 0x00000A50 (MicrosoftOffice + 0x000386f0)
# 18  0x027832f6 in FlexUI::DataSource::QueryInterface(_GUID const&, void**) + 0x00000656 (MicrosoftOffice + 0x000382f6)
# 19  0x02933e4d in _MsoFDocumentHasCustomUI + 0x000005E8 (MicrosoftOffice + 0x001e8e4d)
# 20  0x02933f47 in _MsoFDocumentHasCustomUI + 0x000006E2 (MicrosoftOffice + 0x001e8f47)
# 21  0x029194ed in _FCreateOfficeSpaceWithOUIRibbon + 0x000010F3 (MicrosoftOffice + 0x001ce4ed)
# 22  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 23  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 24  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 25  0x03631b8a in Art::View::FOnMouseMessageCore(Art::MouseMessage const&) + 0x000001B2 (OfficeArt + 0x00120b8a)
# 26  0x00f07654 in _wdGetApplicationObject + 0x0046A1B4 (Microsoft Word + 0x00e49654)
# 27  0x00f082fb in _wdGetApplicationObject + 0x0046AE5B (Microsoft Word + 0x00e4a2fb)
# 28  0x00f0afba in _wdGetApplicationObject + 0x0046DB1A (Microsoft Word + 0x00e4cfba)
# 29  0x0035c7b4 in __mh_execute_header + 0x0029E7B4 (Microsoft Word + 0x0029e7b4)
# 30  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 31  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 32  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 33  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 34  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 35  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 36  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 37  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 38  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 39  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 57  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 58  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 59  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 60  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 61  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 62  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 63  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 64  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 65  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 16
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:52:57 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03631b8a in Art::View::FOnMouseMessageCore(Art::MouseMessage const&) + 0x000001B2 (OfficeArt + 0x00120b8a)
# 39  0x00f07654 in _wdGetApplicationObject + 0x0046A1B4 (Microsoft Word + 0x00e49654)
# 40  0x00f082fb in _wdGetApplicationObject + 0x0046AE5B (Microsoft Word + 0x00e4a2fb)
# 41  0x00f0afba in _wdGetApplicationObject + 0x0046DB1A (Microsoft Word + 0x00e4cfba)
# 42  0x0035c7b4 in __mh_execute_header + 0x0029E7B4 (Microsoft Word + 0x0029e7b4)
# 43  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 44  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 45  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 46  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 47  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 48  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 49  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 50  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 51  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 52  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 53  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 54  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 55  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 56  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 57  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 58  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 59  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 60  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 61  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 62  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 63  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 64  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 65  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 66  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 67  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 68  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 69  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 70  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 71  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 72  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 73  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 74  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 75  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 76  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 77  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 78  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 17
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:53:15 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x010a8c42 in _wdGetApplicationObject + 0x0060B7A2 (Microsoft Word + 0x00feac42)
# 36  0x00372ae9 in __mh_execute_header + 0x002B4AE9 (Microsoft Word + 0x002b4ae9)
# 37  0x0035a001 in __mh_execute_header + 0x0029C001 (Microsoft Word + 0x0029c001)
# 38  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 39  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 57  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 58  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 59  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 60  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 61  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 62  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 63  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 64  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 65  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 66  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 67  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 68  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 69  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 70  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 71  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 72  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 73  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 18
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:53:23 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03631b8a in Art::View::FOnMouseMessageCore(Art::MouseMessage const&) + 0x000001B2 (OfficeArt + 0x00120b8a)
# 39  0x00f07654 in _wdGetApplicationObject + 0x0046A1B4 (Microsoft Word + 0x00e49654)
# 40  0x00f082fb in _wdGetApplicationObject + 0x0046AE5B (Microsoft Word + 0x00e4a2fb)
# 41  0x00f0afba in _wdGetApplicationObject + 0x0046DB1A (Microsoft Word + 0x00e4cfba)
# 42  0x0035c7b4 in __mh_execute_header + 0x0029E7B4 (Microsoft Word + 0x0029e7b4)
# 43  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 44  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 45  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 46  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 47  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 48  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 49  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 50  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 51  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 52  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 53  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 54  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 55  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 56  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 57  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 58  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 59  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 60  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 61  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 62  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 63  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 64  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 65  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 66  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 67  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 68  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 69  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 70  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 71  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 72  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 73  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 74  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 75  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 76  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 77  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 78  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 19
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:53:48 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 39  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 40  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 41  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 42  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 43  0x02814480 in OartTelemetryStream::FReport() + 0x00000CD0 (MicrosoftOffice + 0x000c9480)
# 44  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 45  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 46  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 47  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 48  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 49  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 50  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 51  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 20
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:57:31 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 39  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 40  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 41  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 42  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 43  0x02814480 in OartTelemetryStream::FReport() + 0x00000CD0 (MicrosoftOffice + 0x000c9480)
# 44  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 45  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 46  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 47  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 48  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 49  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 50  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 51  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 21
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:57:32 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb8806 in -[_NSServicesPrincipalMenuUpdater updateVisibilityOfServicesItemsForMenu:isForDisplay:] + 0x0000012E (AppKit + 0x00859806)
# 13  0x986816e7 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002E7 (AppKit + 0x002226e7)
# 14  0x98cb7fec in -[_NSServicesMenuUpdater updateForLiveServicesChangedNotification:] + 0x000000C6 (AppKit + 0x00858fec)
# 15  0x94a71043 in ___57-[NSNotificationCenter addObserver:selector:name:object:]_block_invoke + 0x00000032 (Foundation + 0x00015043)
# 16  0x9370c6f4 in ___CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 0x00000014 (CoreFoundation + 0x0012e6f4)
# 17  0x935ed4c1 in __CFXNotificationPost + 0x00000E81 (CoreFoundation + 0x0000f4c1)
# 18  0x94a5ef64 in -[NSNotificationCenter postNotificationName:object:userInfo:] + 0x0000005C (Foundation + 0x00002f64)
# 19  0x94a7d7d2 in -[NSNotificationCenter postNotificationName:object:] + 0x00000038 (Foundation + 0x000217d2)
# 20  0x98cba697 in ___performServicesLiveMenuUpdate_block_invoke + 0x00000076 (AppKit + 0x0085b697)
# 21  0x9858cd57 in _NSPerformWithScreenUpdatesDisabled + 0x00000061 (AppKit + 0x0012dd57)
# 22  0x98cb249e in _performServicesLiveMenuUpdate + 0x00000030 (AppKit + 0x0085349e)
# 23  0x93678f51 in ___CFNotificationCenterAddObserver_block_invoke + 0x000000B1 (CoreFoundation + 0x0009af51)
# 24  0x9370c6f4 in ___CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 0x00000014 (CoreFoundation + 0x0012e6f4)
# 25  0x936c523a in _____CFXNotificationPostToken_block_invoke + 0x000000AA (CoreFoundation + 0x000e723a)
# 26  0x93663c60 in ___CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ + 0x00000010 (CoreFoundation + 0x00085c60)
# 27  0x93655633 in ___CFRunLoopDoBlocks + 0x000000C3 (CoreFoundation + 0x00077633)
# 28  0x93654d72 in ___CFRunLoopRun + 0x000003D2 (CoreFoundation + 0x00076d72)
# 29  0x93654736 in _CFRunLoopRunSpecific + 0x00000186 (CoreFoundation + 0x00076736)
# 30  0x9365459b in _CFRunLoopRunInMode + 0x0000007B (CoreFoundation + 0x0007659b)
# 31  0x9acc1ea8 in _RunCurrentEventLoopInMode + 0x00000106 (HIToolbox + 0x0002bea8)
# 32  0x9acc1ab3 in _ReceiveNextEventCommon + 0x000000C0 (HIToolbox + 0x0002bab3)
# 33  0x9ad0dea0 in _AcquireNextEventInMode + 0x0000004F (HIToolbox + 0x00077ea0)
# 34  0x9ad0b33f in IsUserStillTracking(MenuSelectData*, unsigned char*) + 0x0000019F (HIToolbox + 0x0007533f)
# 35  0x9ad0ae32 in TrackMenuCommon(MenuSelectData&, unsigned char*) + 0x000006A4 (HIToolbox + 0x00074e32)
# 36  0x9aeadd38 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x00000754 (HIToolbox + 0x00217d38)
# 37  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 38  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 39  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 40  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 41  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 42  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 43  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 44  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 45  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 46  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 47  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 48  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 49  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 50  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 51  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 52  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 53  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 54  0x02814480 in OartTelemetryStream::FReport() + 0x00000CD0 (MicrosoftOffice + 0x000c9480)
# 55  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 56  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 57  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 58  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 59  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 60  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 61  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 62  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 22
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:59:12 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 39  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 40  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 41  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 42  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 43  0x02814480 in OartTelemetryStream::FReport() + 0x00000CD0 (MicrosoftOffice + 0x000c9480)
# 44  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 45  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 46  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 47  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 48  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 49  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 50  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 51  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 23
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:59:13 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 39  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 40  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 41  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 42  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 43  0x02d0f3d3 in _MsoDisposeAppWelcomeWindow + 0x00001F84 (MicrosoftOffice + 0x005c43d3)
# 44  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 45  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 46  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 47  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 48  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 49  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 50  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 51  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 24
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:59:20 2017
#  1  0x02d17050 in _MsoGetScreenRect + 0x00000E68 (MicrosoftOffice + 0x005cc050)
#  2  0x02d17a79 in _MsoGetScreenRect + 0x00001891 (MicrosoftOffice + 0x005cca79)
#  3  0x029cf609 in _MsoFInsertPictureDlg + 0x000002D3 (MicrosoftOffice + 0x00284609)
#  4  0x0181e17b in _wdGetApplicationObject + 0x00D80CDB (Microsoft Word + 0x0176017b)
#  5  0x00ec98c5 in _wdGetApplicationObject + 0x0042C425 (Microsoft Word + 0x00e0b8c5)
#  6  0x00ec93b1 in _wdGetApplicationObject + 0x0042BF11 (Microsoft Word + 0x00e0b3b1)
#  7  0x03668cf0 in Art::CallCommand(Art::Command const&, Art::Selection&, Ofc::TWeakPtr<Art::View> const&, Ofc::TOwningPtr<Art::DuoChainMergePolicy>&, Ofc::TWeakPtr<Art::IE2o> const&) + 0x00000345 (OfficeArt + 0x00157cf0)
#  8  0x036687b5 in Art::Editor::PerformCommand(Art::Command const&, bool, Ofc::TOwningPtr<Art::DuoChainMergePolicy>&) + 0x000001BF (OfficeArt + 0x001577b5)
#  9  0x0397ad79 in Art::View::BuildObjectSnapPoints(Art::SnapInfo&) const + 0x000004A9 (OfficeArt + 0x00469d79)
# 10  0x0397aff3 in Art::View::PerformInfoCommand(Art::InfoCommand const&, bool, bool) + 0x00000047 (OfficeArt + 0x00469ff3)
# 11  0x03bbe1ca in Art::UserInterface::FPerformInfoCommand(Art::InfoCommand const&, bool, bool) + 0x0000005C (OfficeArt + 0x006ad1ca)
# 12  0x03d7620c in Art::ExecuteCommandControlUser::OnSetValue() + 0x000000E2 (OfficeArt + 0x0086520c)
# 13  0x03d7608b in Art::ExecuteActionControlUserBase::SetValue(void*, int, FlexUI::FlexValue*) + 0x0000001D (OfficeArt + 0x0086508b)
# 14  0x02784949 in OfficeSpace::DataSource::SetValue(void*, int, FlexUI::FlexValue*) + 0x000000FF (MicrosoftOffice + 0x00039949)
# 15  0x0352c186 in non-virtual thunk to Art::AppDataSourceProxy::SetValue(void*, int, FlexUI::FlexValue*) + 0x0000002A (OfficeArt + 0x0001b186)
# 16  0x02784949 in OfficeSpace::DataSource::SetValue(void*, int, FlexUI::FlexValue*) + 0x000000FF (MicrosoftOffice + 0x00039949)
# 17  0x027836f0 in FlexUI::DataSource::QueryInterface(_GUID const&, void**) + 0x00000A50 (MicrosoftOffice + 0x000386f0)
# 18  0x027832f6 in FlexUI::DataSource::QueryInterface(_GUID const&, void**) + 0x00000656 (MicrosoftOffice + 0x000382f6)
# 19  0x02933e4d in _MsoFDocumentHasCustomUI + 0x000005E8 (MicrosoftOffice + 0x001e8e4d)
# 20  0x02933f47 in _MsoFDocumentHasCustomUI + 0x000006E2 (MicrosoftOffice + 0x001e8f47)
# 21  0x029194ed in _FCreateOfficeSpaceWithOUIRibbon + 0x000010F3 (MicrosoftOffice + 0x001ce4ed)
# 22  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 23  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 24  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 25  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 26  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 27  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 28  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 29  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 30  0x02d0f3d3 in _MsoDisposeAppWelcomeWindow + 0x00001F84 (MicrosoftOffice + 0x005c43d3)
# 31  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 32  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 33  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 34  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 35  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 36  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 37  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 38  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 25
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 22:59:23 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 39  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 40  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 41  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 42  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 43  0x02d0f3d3 in _MsoDisposeAppWelcomeWindow + 0x00001F84 (MicrosoftOffice + 0x005c43d3)
# 44  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 45  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 46  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 47  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 48  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 49  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 50  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 51  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 26
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 23:00:00 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 39  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 40  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 41  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 42  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 43  0x02814480 in OartTelemetryStream::FReport() + 0x00000CD0 (MicrosoftOffice + 0x000c9480)
# 44  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 45  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 46  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 47  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 48  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 49  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 50  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 51  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 27
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 23:02:29 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03658dbb in Art::EditorTracker::TranslateEvent(NSEvent*) + 0x000001FB (OfficeArt + 0x00147dbb)
# 39  0x036588eb in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000A8C (OfficeArt + 0x001478eb)
# 40  0x03658488 in Art::FTextOverflow(Art::SimpleTextFrame const&, double&, double&) + 0x00000629 (OfficeArt + 0x00147488)
# 41  0x02814500 in OartTelemetryStream::FReport() + 0x00000D50 (MicrosoftOffice + 0x000c9500)
# 42  0x028144bf in OartTelemetryStream::FReport() + 0x00000D0F (MicrosoftOffice + 0x000c94bf)
# 43  0x02814480 in OartTelemetryStream::FReport() + 0x00000CD0 (MicrosoftOffice + 0x000c9480)
# 44  0x986009a6 in __NSSendEventToObservers + 0x00000174 (AppKit + 0x001a19a6)
# 45  0x985fe25b in -[NSApplication sendEvent:] + 0x00000044 (AppKit + 0x0019f25b)
# 46  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 47  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 48  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 49  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 50  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 51  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 28
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 23:03:04 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03631b8a in Art::View::FOnMouseMessageCore(Art::MouseMessage const&) + 0x000001B2 (OfficeArt + 0x00120b8a)
# 39  0x00f07654 in _wdGetApplicationObject + 0x0046A1B4 (Microsoft Word + 0x00e49654)
# 40  0x00f082fb in _wdGetApplicationObject + 0x0046AE5B (Microsoft Word + 0x00e4a2fb)
# 41  0x00f0afba in _wdGetApplicationObject + 0x0046DB1A (Microsoft Word + 0x00e4cfba)
# 42  0x0035c7b4 in __mh_execute_header + 0x0029E7B4 (Microsoft Word + 0x0029e7b4)
# 43  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 44  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 45  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 46  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 47  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 48  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 49  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 50  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 51  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 52  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 53  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 54  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 55  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 56  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 57  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 58  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 59  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 60  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 61  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 62  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 63  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 64  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 65  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 66  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 67  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 68  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 69  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 70  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 71  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 72  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 73  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 74  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 75  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 76  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 77  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 78  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 29
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 23:03:34 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x00ecc93b in _wdGetApplicationObject + 0x0042F49B (Microsoft Word + 0x00e0e93b)
# 36  0x03bbd729 in Art::TxOOUIMgr::AddCacheEntry(Ofc::TOwningPtr<Art::OOUICacheEntry>&) + 0x00007FB9 (OfficeArt + 0x006ac729)
# 37  0x03633565 in Art::UserInterface::PerformPostMouseMessageTask() + 0x0000003F (OfficeArt + 0x00122565)
# 38  0x03631b8a in Art::View::FOnMouseMessageCore(Art::MouseMessage const&) + 0x000001B2 (OfficeArt + 0x00120b8a)
# 39  0x00f07654 in _wdGetApplicationObject + 0x0046A1B4 (Microsoft Word + 0x00e49654)
# 40  0x00f082fb in _wdGetApplicationObject + 0x0046AE5B (Microsoft Word + 0x00e4a2fb)
# 41  0x00f0afba in _wdGetApplicationObject + 0x0046DB1A (Microsoft Word + 0x00e4cfba)
# 42  0x0035c7b4 in __mh_execute_header + 0x0029E7B4 (Microsoft Word + 0x0029e7b4)
# 43  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 44  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 45  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 46  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 47  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 48  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 49  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 50  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 51  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 52  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 53  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 54  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 55  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 56  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 57  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 58  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 59  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 60  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 61  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 62  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 63  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 64  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 65  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 66  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 67  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 68  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 69  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 70  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 71  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 72  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 73  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 74  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 75  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 76  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 77  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 78  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 30
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Thu Mar 23 23:06:13 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x010a8c42 in _wdGetApplicationObject + 0x0060B7A2 (Microsoft Word + 0x00feac42)
# 36  0x00372ae9 in __mh_execute_header + 0x002B4AE9 (Microsoft Word + 0x002b4ae9)
# 37  0x0035a001 in __mh_execute_header + 0x0029C001 (Microsoft Word + 0x0029c001)
# 38  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 39  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 57  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 58  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 59  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 60  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 61  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 62  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 63  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 64  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 65  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 66  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 67  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 68  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 69  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 70  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 71  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 72  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 73  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 31
Assertion Failed: tag 00000000-0000-0000-0000-000000000000 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Sun Mar 26 22:11:34 2017
#  1  0x00a25472 in _wdCommandDispatch + 0x0034E2E2 (Microsoft Word + 0x00967472)
#  2  0x0075fe19 in _wdCommandDispatch + 0x00088C89 (Microsoft Word + 0x006a1e19)
#  3  0x0112015a in _wdGetApplicationObject + 0x00682CBA (Microsoft Word + 0x0106215a)
#  4  0x01120007 in _wdGetApplicationObject + 0x00682B67 (Microsoft Word + 0x01062007)
#  5  0x98dac7cb in -[_NSMenuContext getObjectsOfClass:fromRequestorProvidingType:] + 0x000000A3 (AppKit + 0x0094d7cb)
#  6  0x98dacec1 in -[_NSMenuContext determineSelectedStringForApplyingFiltersViaPasteboardFromRequestorSupplyingType:attributed:] + 0x00000055 (AppKit + 0x0094dec1)
#  7  0x98dad194 in -[_NSMenuContext _selectedStringAndRangeForApplyingFilters:attributed:] + 0x00000123 (AppKit + 0x0094e194)
#  8  0x98dad542 in -[_NSMenuContext _selectionExistsAndIsAllWhitespace] + 0x00000047 (AppKit + 0x0094e542)
#  9  0x98db2271 in -[_NSMenuContext filterEntriesByRemovingItemsThatUseSelectionIfItIsWhitespace:] + 0x00000063 (AppKit + 0x00953271)
# 10  0x98db3a61 in -[_NSMenuContext _preconcurrentPortionOfQualifyEntries:returningEntriesNeedingURLTypecheckingIntoSet:] + 0x000000FB (AppKit + 0x00954a61)
# 11  0x98db42de in -[_NSMenuContext qualifyEntries:withCompletionHandler:] + 0x0000010F (AppKit + 0x009552de)
# 12  0x98cb9b45 in -[_NSServicesContextMenuUpdater populateMenu:withServiceEntries:forDisplay:] + 0x000000A4 (AppKit + 0x0085ab45)
# 13  0x986816a5 in -[_NSServicesMenuUpdater insertServicesIntoMenu:withKeyEvent:isForDisplay:] + 0x000002A5 (AppKit + 0x002226a5)
# 14  0x986813aa in -[_NSServicesMenuUpdater updateMenu:withEvent:withFlags:] + 0x0000005C (AppKit + 0x002223aa)
# 15  0x9867f222 in -[NSMenu _populateFromDelegateWithEventRef:] + 0x000000DB (AppKit + 0x00220222)
# 16  0x9867bbd8 in -[NSMenu _populateWithEventRef:] + 0x00000064 (AppKit + 0x0021cbd8)
# 17  0x9867e1e4 in -[NSCarbonMenuImpl _carbonPopulateEvent:handlerCallRef:] + 0x00000183 (AppKit + 0x0021f1e4)
# 18  0x9867de87 in _NSSLMMenuEventHandler + 0x000002A7 (AppKit + 0x0021ee87)
# 19  0x9ae55254 in _InvokeEventHandlerUPP(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*, long (*)(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*)) + 0x00000024 (HIToolbox + 0x001bf254)
# 20  0x9ac9f1f1 in DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 0x000008F3 (HIToolbox + 0x000091f1)
# 21  0x9ac9e1cc in SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 0x00000192 (HIToolbox + 0x000081cc)
# 22  0x9ac9e033 in _SendEventToEventTargetWithOptions + 0x0000005F (HIToolbox + 0x00008033)
# 23  0x9aea17fa in SendMenuPopulate(MenuData*, OpaqueEventTargetRef*, unsigned long, double, unsigned long, OpaqueEventRef*, unsigned char*) + 0x00000174 (HIToolbox + 0x0020b7fa)
# 24  0x9aeabb62 in SendMenuOpening(MenuSelectData*, MenuData*, double, unsigned long, unsigned long, __CFDictionary*, unsigned char, unsigned char*) + 0x00000139 (HIToolbox + 0x00215b62)
# 25  0x9aead9d6 in PopUpMenuSelectCore(MenuData*, Point, double, Point, unsigned short, unsigned int, Rect const*, unsigned short, unsigned long, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000003F2 (HIToolbox + 0x002179d6)
# 26  0x9aeace80 in _HandlePopUpMenuSelection8(OpaqueMenuRef*, OpaqueEventRef*, unsigned long, Point, unsigned short, unsigned int, Rect const*, unsigned short, Rect const*, Rect const*, __CFDictionary const*, __CFString const*, OpaqueMenuRef**, unsigned short*) + 0x000002BB (HIToolbox + 0x00216e80)
# 27  0x9aead009 in __HandlePopUpMenuSelectionWithDictionary + 0x00000115 (HIToolbox + 0x00217009)
# 28  0x986d9272 in __NSSLMPopUpCarbonMenu3 + 0x0000194D (AppKit + 0x0027a272)
# 29  0x9885bd3d in -[NSCarbonMenuImpl _popUpContextMenu:withEvent:forView:withFont:] + 0x000000E4 (AppKit + 0x003fcd3d)
# 30  0x98a06226 in -[NSMenu _popUpContextMenu:withEvent:forView:withFont:] + 0x00000120 (AppKit + 0x005a7226)
# 31  0x98a060ff in -[NSMenu _popUpContextMenu:withEvent:forView:] + 0x00000040 (AppKit + 0x005a70ff)
# 32  0x98a0528c in +[NSMenu popUpContextMenu:withEvent:forView:] + 0x00000034 (AppKit + 0x005a628c)
# 33  0x02df3911 in _OUISetRibbonGroupTitles + 0x0000675D (MicrosoftOffice + 0x006a8911)
# 34  0x029194e5 in _FCreateOfficeSpaceWithOUIRibbon + 0x000010EB (MicrosoftOffice + 0x001ce4e5)
# 35  0x010a8c42 in _wdGetApplicationObject + 0x0060B7A2 (Microsoft Word + 0x00feac42)
# 36  0x00372ae9 in __mh_execute_header + 0x002B4AE9 (Microsoft Word + 0x002b4ae9)
# 37  0x0035a001 in __mh_execute_header + 0x0029C001 (Microsoft Word + 0x0029c001)
# 38  0x00357db0 in __mh_execute_header + 0x00299DB0 (Microsoft Word + 0x00299db0)
# 39  0x0107efed in _wdGetApplicationObject + 0x005E1B4D (Microsoft Word + 0x00fc0fed)
# 40  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 41  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 42  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 43  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 44  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 45  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 46  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 47  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 48  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 49  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 50  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 51  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 52  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 53  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 54  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 55  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 56  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 57  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 58  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 59  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 60  0x91c84853 in -[NSObject performSelector:withObject:] + 0x00000046 (libobjc.A.dylib + 0x00008853)
# 61  0x98650683 in _forwardMethod + 0x0000008B (AppKit + 0x001f1683)
# 62  0x98aa911c in -[NSResponder rightMouseDown:] + 0x00000017 (AppKit + 0x0064a11c)
# 63  0x98c63af4 in -[NSView rightMouseDown:] + 0x000000CA (AppKit + 0x00804af4)
# 64  0x98c7bdc3 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x00001F76 (AppKit + 0x0081cdc3)
# 65  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 66  0x020fdb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 67  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 68  0x01e8bd94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 69  0x001ff222 in __mh_execute_header + 0x00141222 (Microsoft Word + 0x00141222)
# 70  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 71  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 72  0x000c1f87 in __mh_execute_header + 0x00003F87 (Microsoft Word + 0x00003f87)
# 73  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 32
Assertion Failed: tag 00000000-0000-0000-0000-00000000hx99 AppName: com.microsoft.Word AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Sun Apr  2 10:05:49 2017
#  1  0x059afbde in Csi::CStorageManifestScaffold::AddRootContextAndCellID(CsiCell::RootContextAndCellID const&) + 0x00019C72 (MicrosoftCSI + 0x00041bde)
#  2  0x0599b569 in Csi::CStorageManifestScaffold::AddRootContextAndCellID(CsiCell::RootContextAndCellID const&) + 0x000055FD (MicrosoftCSI + 0x0002d569)
#  3  0x0599a3ee in Csi::CStorageManifestScaffold::AddRootContextAndCellID(CsiCell::RootContextAndCellID const&) + 0x00004482 (MicrosoftCSI + 0x0002c3ee)
#  4  0x05dbd5a9 in Csi::WzGetCurrentUserAgentAppName() + 0x000019FD (MicrosoftCSI + 0x0044f5a9)
#  5  0x05dbd67e in Csi::CreateSimpleAsyncResult(MsoCF::IError*, IUnknown*, MsoCF::Async::IAsyncResult**, bool) + 0x000000AA (MicrosoftCSI + 0x0044f67e)
#  6  0x05e36b80 in Mso::Authentication::SignInTarget::GetTargetsList(Mso::Authentication::IdP::Enum, wchar_t const*) + 0x00001BB5 (MicrosoftCSI + 0x004c8b80)
#  7  0x05e36918 in Mso::Authentication::SignInTarget::GetTargetsList(Mso::Authentication::IdP::Enum, wchar_t const*) + 0x0000194D (MicrosoftCSI + 0x004c8918)
#  8  0x05e35cf3 in Mso::Authentication::SignInTarget::GetTargetsList(Mso::Authentication::IdP::Enum, wchar_t const*) + 0x00000D28 (MicrosoftCSI + 0x004c7cf3)
#  9  0x05e3b228 in Mso::Async::Details::PostWorkerObject(Mso::TCntPtr<Mso::Async::IWorkerObject>*, Mso::Async::IDispatchQueue*, Mso::Functor<void ()>&&) + 0x0000040F (MicrosoftCSI + 0x004cd228)
# 10  0x04c8e06f in _GetClipboardFormatNameW + 0x00003AC5 (WLMKernel + 0x0002c06f)
# 11  0x04c8deef in _GetClipboardFormatNameW + 0x00003945 (WLMKernel + 0x0002beef)
# 12  0x9429d130 in __dispatch_client_callout + 0x00000032 (libdispatch.dylib + 0x00001130)
# 13  0x942a0180 in __dispatch_root_queue_drain + 0x00000382 (libdispatch.dylib + 0x00004180)
# 14  0x942af63d in __dispatch_worker_thread3 + 0x00000061 (libdispatch.dylib + 0x0001363d)
# 15  0x9253d1da in __pthread_wqthread + 0x000002D4 (libsystem_pthread.dylib + 0x000031da)
# 16  0x9253ae2e in _start_wqthread + 0x0000001E (libsystem_pthread.dylib + 0x00000e2e)
AssertCount: 33
