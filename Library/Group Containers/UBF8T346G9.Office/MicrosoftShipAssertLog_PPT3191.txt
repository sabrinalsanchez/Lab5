Assertion Failed: tag 00000000-0000-0000-0000-00000000vgqz AppName: com.microsoft.Powerpoint AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Tue Apr  5 03:38:08 2016
#  1  0x026baf94 in Art::TextField::FExists() const + 0x0000032E (OfficeArt + 0x00048f94)
#  2  0x026f844f in Art::TextRunIterator<Art::TextCharPropertyBag>::MoveNext() + 0x0000010F (OfficeArt + 0x0008644f)
#  3  0x0270088b in Art::SrKinsoku::FHangingPunctEnabledForLanguage(unsigned short) const + 0x00001E43 (OfficeArt + 0x0008e88b)
#  4  0x05366811 in _CreateTextBoxLayout + 0x00026270 (MicrosoftRichEdit + 0x00027811)
#  5  0x05366541 in _CreateTextBoxLayout + 0x00025FA0 (MicrosoftRichEdit + 0x00027541)
#  6  0x0536574a in _CreateTextBoxLayout + 0x000251A9 (MicrosoftRichEdit + 0x0002674a)
#  7  0x05365547 in _CreateTextBoxLayout + 0x00024FA6 (MicrosoftRichEdit + 0x00026547)
#  8  0x053651a5 in _CreateTextBoxLayout + 0x00024C04 (MicrosoftRichEdit + 0x000261a5)
#  9  0x0536506b in _CreateTextBoxLayout + 0x00024ACA (MicrosoftRichEdit + 0x0002606b)
# 10  0x05474d81 in _ShutdownTextServices + 0x000A100C (MicrosoftRichEdit + 0x00135d81)
# 11  0x0548b512 in _ShutdownTextServices + 0x000B779D (MicrosoftRichEdit + 0x0014c512)
# 12  0x0726a5a8 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00007A59 (MicrosoftPTLS + 0x0000f5a8)
# 13  0x07269f68 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00007419 (MicrosoftPTLS + 0x0000ef68)
# 14  0x07269e80 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00007331 (MicrosoftPTLS + 0x0000ee80)
# 15  0x072691fa in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x000066AB (MicrosoftPTLS + 0x0000e1fa)
# 16  0x07388548 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x00029DCF (MicrosoftPTLS + 0x0012d548)
# 17  0x0738c4a8 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x0002DD2F (MicrosoftPTLS + 0x001314a8)
# 18  0x07383989 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x00025210 (MicrosoftPTLS + 0x00128989)
# 19  0x07373d20 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x000155A7 (MicrosoftPTLS + 0x00118d20)
# 20  0x0726884d in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00005CFE (MicrosoftPTLS + 0x0000d84d)
# 21  0x0731cf59 in Ptls6::FsGetOutOfFlowDvrSubpage(Ptls6::fscontext*, Ptls6::fssubpage const*, unsigned long*, long*) + 0x000059A8 (MicrosoftPTLS + 0x000c1f59)
# 22  0x07394375 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x00035BFC (MicrosoftPTLS + 0x00139375)
# 23  0x07394f1f in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x000367A6 (MicrosoftPTLS + 0x00139f1f)
# 24  0x07266ead in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x0000435E (MicrosoftPTLS + 0x0000bead)
# 25  0x07266920 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00003DD1 (MicrosoftPTLS + 0x0000b920)
# 26  0x07355a42 in Ptls6::FsGetShiftOffset(Ptls6::fscontext*, Ptls6::fsshift const*, unsigned long, Ptls6::tagFSPOINT const*, long*) + 0x0000162C (MicrosoftPTLS + 0x000faa42)
# 27  0x073337b9 in Ptls6::FsDestroyMemory(Ptls6::fscontext*, void*) + 0x000005AD (MicrosoftPTLS + 0x000d87b9)
# 28  0x0726495b in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00001E0C (MicrosoftPTLS + 0x0000995b)
# 29  0x072646fa in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00001BAB (MicrosoftPTLS + 0x000096fa)
# 30  0x072644d8 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00001989 (MicrosoftPTLS + 0x000094d8)
# 31  0x0731e034 in Ptls6::FsGetOutOfFlowDvrSubpage(Ptls6::fscontext*, Ptls6::fssubpage const*, unsigned long*, long*) + 0x00006A83 (MicrosoftPTLS + 0x000c3034)
# 32  0x07353b7c in Ptls6::FsQueryFigureObjectDetails(Ptls6::fscontext*, Ptls6::fspara const*, Ptls6::fsfiguredetails*) + 0x00000C6E (MicrosoftPTLS + 0x000f8b7c)
# 33  0x0733cdcd in Ptls6::FsDestroyMemory(Ptls6::fscontext*, void*) + 0x00009BC1 (MicrosoftPTLS + 0x000e1dcd)
# 34  0x07263066 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00000517 (MicrosoftPTLS + 0x00008066)
# 35  0x07317150 in Ptls6::FsUpdateBottomlessPage(Ptls6::fscontext*, Ptls6::fspage*, Ptls6::fsupdclient*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*) + 0x00000063 (MicrosoftPTLS + 0x000bc150)
# 36  0x05385af0 in _CreateTextBoxLayout + 0x0004554F (MicrosoftRichEdit + 0x00046af0)
# 37  0x0538579b in _CreateTextBoxLayout + 0x000451FA (MicrosoftRichEdit + 0x0004679b)
# 38  0x05362cd1 in _CreateTextBoxLayout + 0x00022730 (MicrosoftRichEdit + 0x00023cd1)
# 39  0x053623e2 in _CreateTextBoxLayout + 0x00021E41 (MicrosoftRichEdit + 0x000233e2)
# 40  0x05347b94 in _CreateTextBoxLayout + 0x000075F3 (MicrosoftRichEdit + 0x00008b94)
# 41  0x053622b6 in _CreateTextBoxLayout + 0x00021D15 (MicrosoftRichEdit + 0x000232b6)
# 42  0x053620bc in _CreateTextBoxLayout + 0x00021B1B (MicrosoftRichEdit + 0x000230bc)
# 43  0x0536200e in _CreateTextBoxLayout + 0x00021A6D (MicrosoftRichEdit + 0x0002300e)
# 44  0x0270062d in Art::SrKinsoku::FHangingPunctEnabledForLanguage(unsigned short) const + 0x00001BE5 (OfficeArt + 0x0008e62d)
# 45  0x026fff2f in Art::SrKinsoku::FHangingPunctEnabledForLanguage(unsigned short) const + 0x000014E7 (OfficeArt + 0x0008df2f)
# 46  0x026ff200 in Art::SrKinsoku::FHangingPunctEnabledForLanguage(unsigned short) const + 0x000007B8 (OfficeArt + 0x0008d200)
# 47  0x027287ae in Art::LayerNode::NotifyNeedRebuildLayer() + 0x000001FE (OfficeArt + 0x000b67ae)
# 48  0x02707243 in Art::SimpleTextFrame::GetLocalVersion() const + 0x0000011F (OfficeArt + 0x00095243)
# 49  0x0270717a in Art::SimpleTextFrame::GetLocalVersion() const + 0x00000056 (OfficeArt + 0x0009517a)
# 50  0x027ceb3b in Dr::ShapeDrawingElement::FNeedToCheckAutofit() const + 0x0000003D (OfficeArt + 0x0015cb3b)
# 51  0x027ce95d in Dr::AutofitShapeToTextCommand::FShouldAutofitShape(Ofc::TReferringPtr<Dr::ShapeDrawingElement> const&, Art::Rect64&, Dr::AutoFitParams const&) + 0x00000031 (OfficeArt + 0x0015c95d)
# 52  0x027ce77f in Dr::AutofitShapeToText(Art::Transaction&, Ofc::TReferringPtr<Dr::ShapeDrawingElement> const&, Dr::AutoFitParams const&, bool) + 0x0000003F (OfficeArt + 0x0015c77f)
# 53  0x027ce713 in Art::TextFont::operator==(Art::TextFont const&) const + 0x0000030D (OfficeArt + 0x0015c713)
# 54  0x027ccb7d in Art::TextFrameSelectionInfo::NumFrames() const + 0x00000C3D (OfficeArt + 0x0015ab7d)
# 55  0x02c7b729 in Art::TextDeleteCommand::Perform(Art::Transaction&, Art::Selection&) const + 0x000000A1 (OfficeArt + 0x00609729)
# 56  0x0019f31e in _main + 0x000A5FF3 (Microsoft PowerPoint + 0x000a831e)
# 57  0x0019efef in _main + 0x000A5CC4 (Microsoft PowerPoint + 0x000a7fef)
# 58  0x027c9cf0 in Art::CallCommand(Art::Command const&, Art::Selection&, Ofc::TWeakPtr<Art::View> const&, Ofc::TOwningPtr<Art::DuoChainMergePolicy>&, Ofc::TWeakPtr<Art::IE2o> const&) + 0x00000345 (OfficeArt + 0x00157cf0)
# 59  0x027c97b5 in Art::Editor::PerformCommand(Art::Command const&, bool, Ofc::TOwningPtr<Art::DuoChainMergePolicy>&) + 0x000001BF (OfficeArt + 0x001577b5)
# 60  0x027c9152 in Art::View::PerformCommand(Art::Command const&, bool, bool) + 0x000000FC (OfficeArt + 0x00157152)
# 61  0x027c909d in Art::View::PerformCommand(Art::Command const&, bool, bool) + 0x00000047 (OfficeArt + 0x0015709d)
# 62  0x0279a9b1 in Art::TextDragTracker::OnMouseDown(Art::MouseMessage const&) + 0x00000FED (OfficeArt + 0x001289b1)
# 63  0x02799a4c in Art::TextDragTracker::OnMouseDown(Art::MouseMessage const&) + 0x00000088 (OfficeArt + 0x00127a4c)
# 64  0x02799984 in Art::EditorTracker::StartTracker() + 0x000002D6 (OfficeArt + 0x00127984)
# 65  0x02799734 in Art::EditorTracker::StartTracker() + 0x00000086 (OfficeArt + 0x00127734)
# 66  0x027996c2 in Art::EditorTracker::StartTracker() + 0x00000014 (OfficeArt + 0x001276c2)
# 67  0x027996a7 in Art::Editor::SetEditorTracker(Ofc::TOwningPtr<Art::EditorTracker>&) + 0x0000002F (OfficeArt + 0x001276a7)
# 68  0x0279839d in Dr::DrawingTextEditor::OnMouseMessage(Art::MouseMessage const&, Art::View::HitTestInfo const&) + 0x000005B7 (OfficeArt + 0x0012639d)
# 69  0x02792b64 in Art::View::FOnMouseMessageCore(Art::MouseMessage const&) + 0x0000018C (OfficeArt + 0x00120b64)
# 70  0x0019a706 in _main + 0x000A13DB (Microsoft PowerPoint + 0x000a3706)
# 71  0x0019a50d in _main + 0x000A11E2 (Microsoft PowerPoint + 0x000a350d)
# 72  0x0019a340 in _main + 0x000A1015 (Microsoft PowerPoint + 0x000a3340)
# 73  0x0019a2fd in _main + 0x000A0FD2 (Microsoft PowerPoint + 0x000a32fd)
# 74  0x0019a2a1 in _main + 0x000A0F76 (Microsoft PowerPoint + 0x000a32a1)
# 75  0x0019a24f in _main + 0x000A0F24 (Microsoft PowerPoint + 0x000a324f)
# 76  0x0019a1e3 in _main + 0x000A0EB8 (Microsoft PowerPoint + 0x000a31e3)
# 77  0x0019a17b in _main + 0x000A0E50 (Microsoft PowerPoint + 0x000a317b)
# 78  0x98c7d1f2 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x000033A5 (AppKit + 0x0081e1f2)
# 79  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 80  0x0457bb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 81  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 82  0x01248d94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 83  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 84  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 85  0x000f9383 in _main + 0x00000058 (Microsoft PowerPoint + 0x00002383)
# 86  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 2
Assertion Failed: tag 00000000-0000-0000-0000-000000007b1p AppName: com.microsoft.Powerpoint AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Tue Apr  5 03:38:08 2016
#  1  0x027008f3 in Art::SrKinsoku::FHangingPunctEnabledForLanguage(unsigned short) const + 0x00001EAB (OfficeArt + 0x0008e8f3)
#  2  0x05366811 in _CreateTextBoxLayout + 0x00026270 (MicrosoftRichEdit + 0x00027811)
#  3  0x05366541 in _CreateTextBoxLayout + 0x00025FA0 (MicrosoftRichEdit + 0x00027541)
#  4  0x0536574a in _CreateTextBoxLayout + 0x000251A9 (MicrosoftRichEdit + 0x0002674a)
#  5  0x05365547 in _CreateTextBoxLayout + 0x00024FA6 (MicrosoftRichEdit + 0x00026547)
#  6  0x053651a5 in _CreateTextBoxLayout + 0x00024C04 (MicrosoftRichEdit + 0x000261a5)
#  7  0x0536506b in _CreateTextBoxLayout + 0x00024ACA (MicrosoftRichEdit + 0x0002606b)
#  8  0x05474d81 in _ShutdownTextServices + 0x000A100C (MicrosoftRichEdit + 0x00135d81)
#  9  0x0548b512 in _ShutdownTextServices + 0x000B779D (MicrosoftRichEdit + 0x0014c512)
# 10  0x0726a5a8 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00007A59 (MicrosoftPTLS + 0x0000f5a8)
# 11  0x07269f68 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00007419 (MicrosoftPTLS + 0x0000ef68)
# 12  0x07269e80 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00007331 (MicrosoftPTLS + 0x0000ee80)
# 13  0x072691fa in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x000066AB (MicrosoftPTLS + 0x0000e1fa)
# 14  0x07388548 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x00029DCF (MicrosoftPTLS + 0x0012d548)
# 15  0x0738c4a8 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x0002DD2F (MicrosoftPTLS + 0x001314a8)
# 16  0x07383989 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x00025210 (MicrosoftPTLS + 0x00128989)
# 17  0x07373d20 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x000155A7 (MicrosoftPTLS + 0x00118d20)
# 18  0x0726884d in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00005CFE (MicrosoftPTLS + 0x0000d84d)
# 19  0x0731cf59 in Ptls6::FsGetOutOfFlowDvrSubpage(Ptls6::fscontext*, Ptls6::fssubpage const*, unsigned long*, long*) + 0x000059A8 (MicrosoftPTLS + 0x000c1f59)
# 20  0x07394375 in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x00035BFC (MicrosoftPTLS + 0x00139375)
# 21  0x07394f1f in Ptls6::FsQueryTableSrvCellList(Ptls6::fstablesrvcontext*, Ptls6::fstablerow const*, long, Ptls6::_fskupdate*, Ptls6::fstablecell**, Ptls6::fstablekcellmerge*, long*) + 0x000367A6 (MicrosoftPTLS + 0x00139f1f)
# 22  0x07266ead in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x0000435E (MicrosoftPTLS + 0x0000bead)
# 23  0x07266920 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00003DD1 (MicrosoftPTLS + 0x0000b920)
# 24  0x07355a42 in Ptls6::FsGetShiftOffset(Ptls6::fscontext*, Ptls6::fsshift const*, unsigned long, Ptls6::tagFSPOINT const*, long*) + 0x0000162C (MicrosoftPTLS + 0x000faa42)
# 25  0x073337b9 in Ptls6::FsDestroyMemory(Ptls6::fscontext*, void*) + 0x000005AD (MicrosoftPTLS + 0x000d87b9)
# 26  0x0726495b in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00001E0C (MicrosoftPTLS + 0x0000995b)
# 27  0x072646fa in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00001BAB (MicrosoftPTLS + 0x000096fa)
# 28  0x072644d8 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00001989 (MicrosoftPTLS + 0x000094d8)
# 29  0x0731e034 in Ptls6::FsGetOutOfFlowDvrSubpage(Ptls6::fscontext*, Ptls6::fssubpage const*, unsigned long*, long*) + 0x00006A83 (MicrosoftPTLS + 0x000c3034)
# 30  0x07353b7c in Ptls6::FsQueryFigureObjectDetails(Ptls6::fscontext*, Ptls6::fspara const*, Ptls6::fsfiguredetails*) + 0x00000C6E (MicrosoftPTLS + 0x000f8b7c)
# 31  0x0733cdcd in Ptls6::FsDestroyMemory(Ptls6::fscontext*, void*) + 0x00009BC1 (MicrosoftPTLS + 0x000e1dcd)
# 32  0x07263066 in Ptls6::FsCreatePageBottomless(Ptls6::fscontext*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*, Ptls6::fspage**) + 0x00000517 (MicrosoftPTLS + 0x00008066)
# 33  0x07317150 in Ptls6::FsUpdateBottomlessPage(Ptls6::fscontext*, Ptls6::fspage*, Ptls6::fsupdclient*, Ptls6::fsnameclient*, int, long, Ptls6::_fsfmtrbl*) + 0x00000063 (MicrosoftPTLS + 0x000bc150)
# 34  0x05385af0 in _CreateTextBoxLayout + 0x0004554F (MicrosoftRichEdit + 0x00046af0)
# 35  0x0538579b in _CreateTextBoxLayout + 0x000451FA (MicrosoftRichEdit + 0x0004679b)
# 36  0x05362cd1 in _CreateTextBoxLayout + 0x00022730 (MicrosoftRichEdit + 0x00023cd1)
# 37  0x053623e2 in _CreateTextBoxLayout + 0x00021E41 (MicrosoftRichEdit + 0x000233e2)
# 38  0x05347b94 in _CreateTextBoxLayout + 0x000075F3 (MicrosoftRichEdit + 0x00008b94)
# 39  0x053622b6 in _CreateTextBoxLayout + 0x00021D15 (MicrosoftRichEdit + 0x000232b6)
# 40  0x053620bc in _CreateTextBoxLayout + 0x00021B1B (MicrosoftRichEdit + 0x000230bc)
# 41  0x0536200e in _CreateTextBoxLayout + 0x00021A6D (MicrosoftRichEdit + 0x0002300e)
# 42  0x0270062d in Art::SrKinsoku::FHangingPunctEnabledForLanguage(unsigned short) const + 0x00001BE5 (OfficeArt + 0x0008e62d)
# 43  0x026fff2f in Art::SrKinsoku::FHangingPunctEnabledForLanguage(unsigned short) const + 0x000014E7 (OfficeArt + 0x0008df2f)
# 44  0x026ff200 in Art::SrKinsoku::FHangingPunctEnabledForLanguage(unsigned short) const + 0x000007B8 (OfficeArt + 0x0008d200)
# 45  0x027287ae in Art::LayerNode::NotifyNeedRebuildLayer() + 0x000001FE (OfficeArt + 0x000b67ae)
# 46  0x02707243 in Art::SimpleTextFrame::GetLocalVersion() const + 0x0000011F (OfficeArt + 0x00095243)
# 47  0x0270717a in Art::SimpleTextFrame::GetLocalVersion() const + 0x00000056 (OfficeArt + 0x0009517a)
# 48  0x027ceb3b in Dr::ShapeDrawingElement::FNeedToCheckAutofit() const + 0x0000003D (OfficeArt + 0x0015cb3b)
# 49  0x027ce95d in Dr::AutofitShapeToTextCommand::FShouldAutofitShape(Ofc::TReferringPtr<Dr::ShapeDrawingElement> const&, Art::Rect64&, Dr::AutoFitParams const&) + 0x00000031 (OfficeArt + 0x0015c95d)
# 50  0x027ce77f in Dr::AutofitShapeToText(Art::Transaction&, Ofc::TReferringPtr<Dr::ShapeDrawingElement> const&, Dr::AutoFitParams const&, bool) + 0x0000003F (OfficeArt + 0x0015c77f)
# 51  0x027ce713 in Art::TextFont::operator==(Art::TextFont const&) const + 0x0000030D (OfficeArt + 0x0015c713)
# 52  0x027ccb7d in Art::TextFrameSelectionInfo::NumFrames() const + 0x00000C3D (OfficeArt + 0x0015ab7d)
# 53  0x02c7b729 in Art::TextDeleteCommand::Perform(Art::Transaction&, Art::Selection&) const + 0x000000A1 (OfficeArt + 0x00609729)
# 54  0x0019f31e in _main + 0x000A5FF3 (Microsoft PowerPoint + 0x000a831e)
# 55  0x0019efef in _main + 0x000A5CC4 (Microsoft PowerPoint + 0x000a7fef)
# 56  0x027c9cf0 in Art::CallCommand(Art::Command const&, Art::Selection&, Ofc::TWeakPtr<Art::View> const&, Ofc::TOwningPtr<Art::DuoChainMergePolicy>&, Ofc::TWeakPtr<Art::IE2o> const&) + 0x00000345 (OfficeArt + 0x00157cf0)
# 57  0x027c97b5 in Art::Editor::PerformCommand(Art::Command const&, bool, Ofc::TOwningPtr<Art::DuoChainMergePolicy>&) + 0x000001BF (OfficeArt + 0x001577b5)
# 58  0x027c9152 in Art::View::PerformCommand(Art::Command const&, bool, bool) + 0x000000FC (OfficeArt + 0x00157152)
# 59  0x027c909d in Art::View::PerformCommand(Art::Command const&, bool, bool) + 0x00000047 (OfficeArt + 0x0015709d)
# 60  0x0279a9b1 in Art::TextDragTracker::OnMouseDown(Art::MouseMessage const&) + 0x00000FED (OfficeArt + 0x001289b1)
# 61  0x02799a4c in Art::TextDragTracker::OnMouseDown(Art::MouseMessage const&) + 0x00000088 (OfficeArt + 0x00127a4c)
# 62  0x02799984 in Art::EditorTracker::StartTracker() + 0x000002D6 (OfficeArt + 0x00127984)
# 63  0x02799734 in Art::EditorTracker::StartTracker() + 0x00000086 (OfficeArt + 0x00127734)
# 64  0x027996c2 in Art::EditorTracker::StartTracker() + 0x00000014 (OfficeArt + 0x001276c2)
# 65  0x027996a7 in Art::Editor::SetEditorTracker(Ofc::TOwningPtr<Art::EditorTracker>&) + 0x0000002F (OfficeArt + 0x001276a7)
# 66  0x0279839d in Dr::DrawingTextEditor::OnMouseMessage(Art::MouseMessage const&, Art::View::HitTestInfo const&) + 0x000005B7 (OfficeArt + 0x0012639d)
# 67  0x02792b64 in Art::View::FOnMouseMessageCore(Art::MouseMessage const&) + 0x0000018C (OfficeArt + 0x00120b64)
# 68  0x0019a706 in _main + 0x000A13DB (Microsoft PowerPoint + 0x000a3706)
# 69  0x0019a50d in _main + 0x000A11E2 (Microsoft PowerPoint + 0x000a350d)
# 70  0x0019a340 in _main + 0x000A1015 (Microsoft PowerPoint + 0x000a3340)
# 71  0x0019a2fd in _main + 0x000A0FD2 (Microsoft PowerPoint + 0x000a32fd)
# 72  0x0019a2a1 in _main + 0x000A0F76 (Microsoft PowerPoint + 0x000a32a1)
# 73  0x0019a24f in _main + 0x000A0F24 (Microsoft PowerPoint + 0x000a324f)
# 74  0x0019a1e3 in _main + 0x000A0EB8 (Microsoft PowerPoint + 0x000a31e3)
# 75  0x0019a17b in _main + 0x000A0E50 (Microsoft PowerPoint + 0x000a317b)
# 76  0x98c7d1f2 in -[NSWindow _reallySendEvent:isDelayedEvent:] + 0x000033A5 (AppKit + 0x0081e1f2)
# 77  0x98651c4a in -[NSWindow sendEvent:] + 0x0000020E (AppKit + 0x001f2c4a)
# 78  0x0457bb44 in _CUIDrawNSImage + 0x0000067E (CocoaUI + 0x0000ab44)
# 79  0x985ff4b4 in -[NSApplication sendEvent:] + 0x0000129D (AppKit + 0x001a04b4)
# 80  0x01248d94 in wc16::wcscmp(wchar_t const*, wchar_t const*) + 0x00000109 (mbukernel + 0x00007d94)
# 81  0x984789ac in -[NSApplication run] + 0x000003EB (AppKit + 0x000199ac)
# 82  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 83  0x000f9383 in _main + 0x00000058 (Microsoft PowerPoint + 0x00002383)
# 84  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 3
Assertion Failed: tag 00000000-0000-0000-0000-0000000aclo1 AppName: com.microsoft.Powerpoint AppVersion: 15.18.160109 Latest Installed Update: 15.18.160109 file  line 0:  //  Sun Apr 10 20:55:58 2016
#  1  0x00184867 in _main + 0x0008B53C (Microsoft PowerPoint + 0x0008d867)
#  2  0x0018427f in _main + 0x0008AF54 (Microsoft PowerPoint + 0x0008d27f)
#  3  0x001834a3 in _main + 0x0008A178 (Microsoft PowerPoint + 0x0008c4a3)
#  4  0x93663c60 in ___CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ + 0x00000010 (CoreFoundation + 0x00085c60)
#  5  0x93655633 in ___CFRunLoopDoBlocks + 0x000000C3 (CoreFoundation + 0x00077633)
#  6  0x93655215 in ___CFRunLoopRun + 0x00000875 (CoreFoundation + 0x00077215)
#  7  0x93654736 in _CFRunLoopRunSpecific + 0x00000186 (CoreFoundation + 0x00076736)
#  8  0x9365459b in _CFRunLoopRunInMode + 0x0000007B (CoreFoundation + 0x0007659b)
#  9  0x9acc1ea8 in _RunCurrentEventLoopInMode + 0x00000106 (HIToolbox + 0x0002bea8)
# 10  0x9acc1ab3 in _ReceiveNextEventCommon + 0x000000C0 (HIToolbox + 0x0002bab3)
# 11  0x9acc19dc in __BlockUntilNextEventMatchingListInModeWithFilter + 0x00000063 (HIToolbox + 0x0002b9dc)
# 12  0x98486a71 in __DPSNextEvent + 0x000002E6 (AppKit + 0x00027a71)
# 13  0x984862b1 in -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] + 0x000000BA (AppKit + 0x000272b1)
# 14  0x9847894c in -[NSApplication run] + 0x0000038B (AppKit + 0x0001994c)
# 15  0x98461cf0 in _NSApplicationMain + 0x00000822 (AppKit + 0x00002cf0)
# 16  0x000f9383 in _main + 0x00000058 (Microsoft PowerPoint + 0x00002383)
# 17  0x9c3b56d9 in _start + 0x00000001 (libdyld.dylib + 0x000036d9)
AssertCount: 4
